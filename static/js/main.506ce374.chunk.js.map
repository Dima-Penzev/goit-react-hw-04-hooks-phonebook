{"version":3,"sources":["App.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/Contact/Contact.js","components/ContactsList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactsList/ContactsList.module.css"],"names":["module","exports","ContactForm","state","id","name","number","nameInputId","shortid","generate","numberInputId","handleChange","e","setState","currentTarget","value","handleAddId","handleSubmit","preventDefault","props","onSubmit","reset","this","className","s","label","htmlFor","type","pattern","title","required","onChange","input","addBtn","Component","Contact","ContactList","contacts","onDeleteContact","list","map","item","deleteBtn","onClick","Filter","filterInputId","App","filter","formSubmitHandler","data","find","contact","toLowerCase","alert","changeFilter","getProperContact","includes","deleteContact","idContact","prevState","localStorage","getItem","parsedContacts","JSON","parse","prevProps","currentContacts","setItem","stringify","container","forms","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.506ce374.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"forms\":\"App_forms__1COi9\",\"contacts\":\"App_contacts__2HZIN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__wvTLR\",\"input\":\"Filter_input__2kqGT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__YCwQc\",\"input\":\"ContactForm_input__3AZAD\",\"addBtn\":\"ContactForm_addBtn__V_ZGz\"};","import React, { Component } from \"react\";\nimport shortid from \"shortid\";\nimport s from \"./ContactForm.module.css\";\n\nclass ContactForm extends Component {\n  state = {\n    id: \"\",\n    name: \"\",\n    number: \"\",\n  };\n\n  nameInputId = shortid.generate();\n  numberInputId = shortid.generate();\n\n  handleChange = (e) => {\n    this.setState({\n      [e.currentTarget.name]: e.currentTarget.value,\n    });\n    this.handleAddId();\n  };\n\n  handleAddId = () => {\n    this.setState({\n      id: `id-${shortid.generate()}`,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset() {\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label className={s.label} htmlFor={this.nameInputId}>\n          Name\n        </label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          value={this.state.name}\n          required\n          onChange={this.handleChange}\n          id={this.nameInputId}\n          className={s.input}\n        />\n\n        <label className={s.label} htmlFor={this.numberInputId}>\n          Number\n        </label>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          value={this.state.number}\n          required\n          onChange={this.handleChange}\n          id={this.numberInputId}\n          className={s.input}\n        />\n\n        <button type=\"submit\" className={s.addBtn}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import PropTypes from \"prop-types\";\n\nfunction Contact({ name, number }) {\n  return (\n    <p>\n      {name}: {number}\n    </p>\n  );\n}\n\nContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default Contact;\n","import PropTypes from \"prop-types\";\nimport Contact from \"../Contact/Contact\";\nimport s from \"./ContactsList.module.css\";\n\nfunction ContactList({ contacts, onDeleteContact }) {\n  return (\n    <div>\n      <ul className={s.list}>\n        {contacts.map((item) => (\n          <li key={item.id} className={s.item}>\n            <Contact name={item.name} number={item.number} />\n            <button\n              type=\"button\"\n              className={s.deleteBtn}\n              onClick={() => onDeleteContact(item.id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    })\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import PropTypes from \"prop-types\";\nimport s from \"./Filter.module.css\";\nimport shortid from \"shortid\";\n\nfunction Filter({ value, onChange }) {\n  const filterInputId = shortid.generate();\n\n  return (\n    <div>\n      <label className={s.label} htmlFor={filterInputId}>\n        Find contacts by name\n      </label>\n      <input\n        type=\"text\"\n        className={s.input}\n        id={filterInputId}\n        value={value}\n        onChange={onChange}\n      />\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from \"react\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactsList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport s from \"./App.module.css\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const currentContacts = this.state.contacts;\n    const prevContacts = prevState.contacts;\n\n    if (currentContacts !== prevContacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(currentContacts));\n    }\n  }\n\n  formSubmitHandler = (data) => {\n    const { contacts } = this.state;\n\n    if (\n      contacts.find(\n        (contact) => contact.name.toLowerCase() === data.name.toLowerCase()\n      )\n    ) {\n      alert(`${data.name} is already in contacts`);\n    } else {\n      this.setState(({ contacts }) => ({\n        contacts: [data, ...contacts],\n      }));\n    }\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getProperContact = () => {\n    const { filter, contacts } = this.state;\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  deleteContact = (idContact) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== idContact\n      ),\n    }));\n  };\n\n  render() {\n    return (\n      <div className={s.container}>\n        <div className={s.forms}>\n          <h1>Phonebook</h1>\n          <ContactForm onSubmit={this.formSubmitHandler} />\n        </div>\n\n        <div className={s.contacts}>\n          <h2>Contacts</h2>\n          <Filter value={this.state.filter} onChange={this.changeFilter} />\n          <ContactList\n            contacts={this.getProperContact()}\n            onDeleteContact={this.deleteContact}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__2f2zL\",\"item\":\"ContactsList_item__1jZka\",\"deleteBtn\":\"ContactsList_deleteBtn__9ZVmS\"};"],"sourceRoot":""}