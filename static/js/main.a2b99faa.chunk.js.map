{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactForm/ContactForm.js","components/Contact/Contact.js","components/ContactsList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactsList/ContactsList.module.css","App.module.css"],"names":["module","exports","ContactForm","onSubmit","useState","id","setId","name","setName","number","setNumber","nameInputId","shortid","generate","numberInputId","handleChange","e","target","value","handleAddId","reset","preventDefault","className","s","label","htmlFor","type","pattern","title","required","onChange","input","addBtn","Contact","ContactList","contacts","onDeleteContact","list","map","item","deleteBtn","onClick","Filter","filterInputId","App","JSON","parse","window","localStorage","getItem","setContacts","filter","setFilter","useEffect","setItem","stringify","container","forms","data","find","contact","toLowerCase","alert","currentTarget","includes","idContact","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a2b99faa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__wvTLR\",\"input\":\"Filter_input__2kqGT\"};","import { useState } from \"react\";\nimport shortid from \"shortid\";\nimport s from \"./ContactForm.module.css\";\n\nfunction ContactForm({ onSubmit }) {\n  const [id, setId] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const nameInputId = shortid.generate();\n  const numberInputId = shortid.generate();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n\n    handleAddId();\n  };\n\n  const handleAddId = () => {\n    setId(`id-${shortid.generate()}`);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    onSubmit({ id, name, number });\n    reset();\n  };\n\n  const reset = () => {\n    setId(\"\");\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label className={s.label} htmlFor={nameInputId}>\n        Name\n      </label>\n      <input\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        value={name}\n        required\n        onChange={handleChange}\n        id={nameInputId}\n        className={s.input}\n      />\n\n      <label className={s.label} htmlFor={numberInputId}>\n        Number\n      </label>\n      <input\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        value={number}\n        required\n        onChange={handleChange}\n        id={numberInputId}\n        className={s.input}\n      />\n\n      <button type=\"submit\" className={s.addBtn}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import PropTypes from \"prop-types\";\n\nfunction Contact({ name, number }) {\n  return (\n    <p>\n      {name}: {number}\n    </p>\n  );\n}\n\nContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default Contact;\n","import PropTypes from \"prop-types\";\nimport Contact from \"../Contact/Contact\";\nimport s from \"./ContactsList.module.css\";\n\nfunction ContactList({ contacts, onDeleteContact }) {\n  return (\n    <div>\n      <ul className={s.list}>\n        {contacts.map((item) => (\n          <li key={item.id} className={s.item}>\n            <Contact name={item.name} number={item.number} />\n            <button\n              type=\"button\"\n              className={s.deleteBtn}\n              onClick={() => onDeleteContact(item.id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    })\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import PropTypes from \"prop-types\";\nimport s from \"./Filter.module.css\";\nimport shortid from \"shortid\";\n\nfunction Filter({ value, onChange }) {\n  const filterInputId = shortid.generate();\n\n  return (\n    <div>\n      <label className={s.label} htmlFor={filterInputId}>\n        Find contacts by name\n      </label>\n      <input\n        type=\"text\"\n        className={s.input}\n        id={filterInputId}\n        value={value}\n        onChange={onChange}\n      />\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { useState, useEffect } from \"react\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactsList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport s from \"./App.module.css\";\n\nfunction App() {\n  const [contacts, setContacts] = useState(\n    JSON.parse(window.localStorage.getItem(\"contacts\")) ?? []\n  );\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const formSubmitHandler = (data) => {\n    if (\n      contacts.find(\n        (contact) => contact.name.toLowerCase() === data.name.toLowerCase()\n      )\n    ) {\n      alert(`${data.name} is already in contacts`);\n    } else {\n      setContacts([data, ...contacts]);\n    }\n  };\n\n  const changeFilter = (e) => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const getProperContact = () => {\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  const deleteContact = (idContact) => {\n    setContacts((prevState) =>\n      prevState.filter((contact) => contact.id !== idContact)\n    );\n  };\n\n  return (\n    <div className={s.container}>\n      <div className={s.forms}>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={formSubmitHandler} />\n      </div>\n\n      <div className={s.contacts}>\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={changeFilter} />\n        <ContactList\n          contacts={getProperContact()}\n          onDeleteContact={deleteContact}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__YCwQc\",\"input\":\"ContactForm_input__3AZAD\",\"addBtn\":\"ContactForm_addBtn__V_ZGz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__2f2zL\",\"item\":\"ContactsList_item__1jZka\",\"deleteBtn\":\"ContactsList_deleteBtn__9ZVmS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forms\":\"App_forms__1COi9\",\"contacts\":\"App_contacts__2HZIN\"};"],"sourceRoot":""}